<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="yhao.micro.service.surety.business.dao.automapper.RedeemDao">

    <resultMap id="redeemQueryBase" type="RedemptionQueryResultForm">
        <id property="id" column="FID"/>
        <result property="guaranteeNum" column="FGUARANTEE_ID"></result>
        <result property="bizName" column="FBIZ_NAME"></result>
        <result property="estateName" column="FESTATE_NAME"></result>
        <result property="deedNum" column="Fdeed_num"></result>
        <result property="managerName" column="fmanager_name"></result>
        <result property="redeemBankName" column="fredeem_bank_name"></result>
        <result property="bankName" column="fbank_name"></result>
        <result property="loanAmount" column="Floan_amount"></result>
        <result property="buyerName" column="FGUARANTEE_PID"></result>
        <result property="sellerName" column="FGUARANTEE_PID"></result>
    </resultMap>

    <resultMap id="billingApplyMap" type="BillingApplyModel">
        <id property="id" column="FID"/>
        <result property="guaranteeId" column="FGUARANTEE_ID"></result>
        <result property="loanId" column="FLOAN_ID"></result>
        <result property="personType" column="FRECEIPT_PERSON_TYPE"></result>
        <result property="receiptAccountId" column="FRECEIPT_ACCOUNT_ID"></result>
        <result property="receiptAccountNum" column="FRECEIPT_ACCOUNT_NUM"></result>
        <result property="receiptAccountBank" column="FRECEIPT_ACCOUNT_BANK"></result>
        <result property="redeemDate" column="FREDEEM_DATE"></result>
        <result property="applyAmount" column="FAPPLY_AMOUNT"></result>
        <result property="taskId" column="FTASK_ID"></result>
        <result property="taskStatus" column="FTASK_STATUS"></result>
        <result property="taskProsess" column="FTASK_PROSESS"></result>
        <result property="remark" column="FREMARK"></result>
        <result property="createTime" column="FCREATE_TIME"/>
        <result property="createOperatorId" column="FCREATE_OPERATOR_ID"/>
        <result property="updateTime" column="FUPDATE_TIME"/>
        <result property="updateOperatorId" column="FUPDATE_OPERATOR_ID"/>
    </resultMap>

    <resultMap id="afterFollowModelMap" type="RDTAfterFollowModel">
        <id property="id" column="FID"/>
        <result property="guaranteeId" column="FGUARANTEE_ID"></result>
        <result property="takeCertDate" column="FTAKE_CERT_DATE"></result>
        <result property="takeCertNumber" column="FCERT_NUMBER"></result>
        <result property="takeCertRemark" column="FTAKE_CERT_REMARK"></result>
        <result property="certLogoutDate" column="FCERT_LOGOUT_DATE"></result>
        <result property="certLogoutNumber" column="FCERT_LOGOUT_NUMBER"></result>
        <result property="certLogoutRemark" column="FCERT_LOGOUT_REMARK"></result>
        <result property="transferDate" column="FTRANSFER_DATE"></result>
        <result property="transferNumber" column="FTRANSFER_NUMBER"></result>
        <result property="transferRemark" column="FTRANSFER_REMARK"></result>
        <result property="takeNewCertDate" column="FTAKE_NEWCERT_DATE"></result>
        <result property="newCertNumber" column="FNEW_CERT_NUMBER"></result>
        <result property="takeNewCertRemark" column="FTAKE_NEWCERT_REMARK"></result>
        <result property="mortgageDate" column="FMORTGAGE_DATE"></result>
        <result property="mortgageRemark" column="FMORTGAGE_REMARK"></result>
        <result property="isUnprotected" column="FIS_UNPROTECTED"></result>
        <result property="unProtectedRemark" column="FUNPROTECTED_REMARK"></result>
        <result property="takeCertId" column="FTAKE_CERT_ID"></result>
        <result property="certLogoutId" column="FCERT_LOGOUT_ID"></result>
        <result property="transferId" column="FTRANSFER_ID"></result>
        <result property="takeNewCertId" column="FTAKE_NEW_CERT_ID"></result>
        <result property="mortgageId" column="FMORTGAGE_ID"></result>
        <result property="unprotectedId" column="FUNPROTECTED_ID"></result>
        <result property="createTime" column="FCREATE_TIME"/>
        <result property="createOperatorId" column="FCREATE_OPERATOR_ID"/>
        <result property="updateTime" column="FUPDATE_TIME"/>
        <result property="updateOperatorId" column="FUPDATE_OPERATOR_ID"/>
    </resultMap>

    <resultMap id="redeemMap" type="RedeemModel">
        <id property="id" column="FID"/>
        <result property="guaranteePid" column="FGUARANTEE_PID"></result>
        <result property="financeBillingId" column="FFINANCE_BILLING_ID"></result>
        <result property="billingAmount" column="FBILLING_AMOUNT"></result>
        <result property="realRepayAmount" column="FREAL_REPAY_AMOUNT"></result>
        <result property="redeemTotalAmount" column="FREDEEM_TOTAL_AMOUNT"></result>
        <result property="interest" column="FINTEREST"></result>
        <result property="penaltyInterest" column="FPENALTY_INTEREST"></result>
        <result property="redeemBalance" column="FREDEEM_BALANCE"></result>
        <result property="redeemOperatorId" column="FREDEEM_OPERATOR_ID"></result>
        <result property="companyAccountId" column="FCOMPANY_ACCOUNT_ID"></result>
        <result property="redeemDate" column="FREDEEM_DATE"></result>
        <result property="rebackDate" column="FREBACK_DATE"></result>
        <result property="personReplenishment" column="FPERSON_REPLENISHMENT"></result>
        <result property="createTime" column="FCREATE_TIME"/>
        <result property="createOperatorId" column="FCREATE_OPERATOR_ID"/>
        <result property="updateTime" column="FUPDATE_TIME"/>
        <result property="updateOperatorId" column="FUPDATE_OPERATOR_ID"/>
    </resultMap>


    <sql id="afterFollowModelSql">
        FID,FGUARANTEE_ID,FTAKE_CERT_DATE ,FCERT_NUMBER ,FTAKE_CERT_REMARK,FCERT_LOGOUT_DATE,FCERT_LOGOUT_NUMBER,FCERT_LOGOUT_REMARK,
        FTRANSFER_DATE,FTRANSFER_NUMBER,FTRANSFER_REMARK,FTAKE_NEWCERT_DATE,FNEW_CERT_NUMBER,FTAKE_NEWCERT_REMARK ,FMORTGAGE_DATE,
        FMORTGAGE_REMARK,FIS_UNPROTECTED,FUNPROTECTED_REMARK,FCREATE_TIME,FCREATE_OPERATOR_ID,FUPDATE_TIME,FUPDATE_OPERATOR_ID,FUNPROTECTED_DATE,
        FTAKE_CERT_ID,FCERT_LOGOUT_ID,FTRANSFER_ID,FTAKE_NEW_CERT_ID,FMORTGAGE_ID,FUNPROTECTED_ID
    </sql>


    <sql id="applySql">
        FID,FGUARANTEE_ID,FLOAN_ID,FRECEIPT_PERSON_TYPE,FRECEIPT_ACCOUNT_ID,FRECEIPT_ACCOUNT_NUM,FRECEIPT_ACCOUNT_BANK,
        FREDEEM_DATE,FAPPLY_AMOUNT,FTASK_ID,FTASK_STATUS,FTASK_PROSESS,FREMARK,FCREATE_TIME,FCREATE_OPERATOR_ID,FUPDATE_TIME,FUPDATE_OPERATOR_ID
    </sql>
    <insert id="inertInsertApply" parameterType="BillingApplyModel">
        insert into T_SURETY_BILLING_APPLY(FID,FGUARANTEE_ID,FLOAN_ID,FRECEIPT_PERSON_TYPE,FRECEIPT_ACCOUNT_ID,FRECEIPT_ACCOUNT_NUM,FRECEIPT_ACCOUNT_BANK,
        FREDEEM_DATE,FAPPLY_AMOUNT,FTASK_ID,FTASK_STATUS,FTASK_PROSESS,FREMARK,FCREATE_TIME,FCREATE_OPERATOR_ID,FUPDATE_TIME,FUPDATE_OPERATOR_ID)
        values (#{id},#{guaranteeId},#{loanId},#{personType},#{receiptAccountId},#{receiptAccountNum},#{receiptAccountBank},#{redeemDate},
        #{applyAmount},#{taskId},#{taskStatus},#{taskProsess},#{remark},#{createTime},#{createOperatorId},#{updateTime},#{updateOperatorId})
    </insert>
    <select id="pickBillingApplyDetail" resultMap="billingApplyMap" parameterType="yhao.infra.apilist.validate.IdForm">
       select FGUARANTEE_ID.FID,BILLING_APPLY.FGUARANTEE_ID,BILLING_APPLY.FLOAN_ID,BILLING_APPLY.FRECEIPT_PERSON_TYPE,BILLING_APPLY.FRECEIPT_ACCOUNT_ID,
        BILLING_APPLY.FRECEIPT_ACCOUNT_NUM,BILLING_APPLY.FRECEIPT_ACCOUNT_BANK,
        BILLING_APPLY.FREDEEM_DATE,BILLING_APPLY.FAPPLY_AMOUNT,BILLING_APPLY.FTASK_ID,
        BILLING_APPLY.FTASK_PROSESS,BILLING_APPLY.FREMARK,BILLING_APPLY.FCREATE_TIME,
        BILLING_APPLY.FCREATE_OPERATOR_ID,BILLING_APPLY.FUPDATE_TIME,BILLING_APPLY.FUPDATE_OPERATOR_ID,
        WK_TASK.FSTATUS AS FTASK_STATUS
        FROM T_SURETY_BILLING_APPLY BILLING_APPLY
        INNER JOIN T_WK_TASK WK_TASK ON WK_TASK.FID = BILLING_APPLY.FTASK_ID
        WHERE BILLING_APPLY.FID=#{id}
    </select>

    <select id="queryRedeemAfter" resultMap="queryRedeemAfterPage"
            parameterType="yhao.micro.service.surety.business.apilist.form.redemption.RDTAfterFollowQueryForm">
        SELECT GUARANTEE.FID,
        GUARANTEE.FGUARANTEE_NUM,
        GUARANTEE.FGUARANTEE_TYPE,
        BUSINESS_TYPE.FBUSINESS_NAME,
        ESTATE_SELLER.FESTATE_NAME,
        PERSONINFO_TRADES.FCLT_TYP,
        PERSONINFO_TRADES.FCLT_NAME,
        GUARANTEE_SITUATION.FGUARANTEE_AMOUNT,
        LOAN_GENERAL.FLOAN_TOTAL_AMOUNT
        FROM  T_SURETY_GUARANTEE GUARANTEE
        LEFT JOIN SURETY.T_SURETY_BUSINESS_TYPE BUSINESS_TYPE ON BUSINESS_TYPE.FID = GUARANTEE.FBIZ_ID
        LEFT JOIN SURETY.T_SURETY_G_ESTATE_SELLER ESTATE_SELLER ON ESTATE_SELLER.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_PERSONINFO_TRADES PERSONINFO_TRADES ON PERSONINFO_TRADES.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_GUARANTEE_SITUATION GUARANTEE_SITUATION ON GUARANTEE_SITUATION.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_LOAN_GENERAL LOAN_GENERAL ON LOAN_GENERAL.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_REDEEM_MANAGER REDEEM_MANAGER  ON REDEEM_MANAGER .FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_RDT_AFTER_FOLLOW AFTER_FOLLOW  ON AFTER_FOLLOW .FGUARANTEE_ID = GUARANTEE.FID
        <include refid="yhao.infra.service.base.DataAuthRef.tableSql"/>
        <where>
            <if test="orgId != null and orgId != ''">
                and GUARANTEE.FORG_ID = #{orgId}
            </if>
            <if test="personId != null and personId != ''">
                and GUARANTEE.FCREATE_OPERATOR_ID = #{personId}
            </if>

            <if test="keyWord != null and keyWord != ''">
                and (GUARANTEE.FGUARANTEE_NUM = #{keyWord}
                or ESTATE_SELLER.FPROPERTY_NAME = #{keyWord}
                or PERSONINFO_TRADES.FCLT_NAME = #{keyWord}
                or (ESTATE_SELLER.FDEED_NUM = #{keyWord} and ESTATE_SELLER.FDEED_TYPE = 'FCZ'))
            </if>
            <if test="positionType != null and positionType eq 'takeCert' ">
                and REDEEM_MANAGER.FIS_REDEEM ='YES'
            </if>
            <if test="positionType != null and positionType eq 'certLogout' ">
                and AFTER_FOLLOW.FTAKE_CERT_ID != null AND length (AFTER_FOLLOW.FTAKE_CERT_ID) &gt;0
                and AFTER_FOLLOW.FTAKE_CERT_DATE != null
            </if>
            <if test="positionType != null and positionType eq 'transfer' ">
                and AFTER_FOLLOW.FCERT_LOGOUT_ID != null AND length (AFTER_FOLLOW.FCERT_LOGOUT_ID) &gt;0
                and AFTER_FOLLOW.FCERT_LOGOUT_DATE != null
            </if>
            <if test="positionType != null and positionType eq 'takeNewCert' ">
                and AFTER_FOLLOW.FTAKE_NEW_CERT_ID != null AND length (AFTER_FOLLOW.FTAKE_NEW_CERT_ID) &gt;0
                and AFTER_FOLLOW.FTAKE_NEWCERT_DATE != null
            </if>
            <if test="positionType != null and positionType eq 'mortgage' ">
                and AFTER_FOLLOW.FMORTGAGE_ID != null AND length (AFTER_FOLLOW.FMORTGAGE_ID) &gt;0
                and AFTER_FOLLOW.FMORTGAGE_DATE != null
            </if>

        </where>
        <include refid="yhao.infra.service.base.DataAuthRef.conditionSql"/>
    </select>

    <resultMap id="queryRedeemAfterPage" type="yhao.micro.service.surety.business.apilist.form.redemption.RDTAfterFollowQueryResultForm">
        <id property="id" column="FID" />
        <result property="guaranteeType" column="FGUARANTEE_TYPE"/>
        <result property="guaranteeNum" column="FGUARANTEE_NUM"/>
        <result property="businessName" column="FBUSINESS_NAME"/>
        <result property="guaranteeAmount" column="FGUARANTEE_AMOUNT"/>
        <result property="loanTotalAmount" column="FLOAN_TOTAL_AMOUNT"/>
        <collection property = "applicationPersonModelList" ofType="yhao.micro.service.surety.business.apilist.model.guarantee.page.ApplicationPersonModel" >
            <id property="id" column="FID" />
            <result property="cltTyp" column="FCLT_TYP"/>
            <result property="cltName" column="FCLT_NAME"/>
        </collection>
    </resultMap>

    <select id="pickRedeemAfter" parameterType="string" resultMap="afterFollowModelMap">
     select
        <include refid="afterFollowModelSql"/>
     from
        T_SURETY_RDT_AFTER_FOLLOW
     where
        FGUARANTEE_ID=#{guaranteeId}
    </select>
    <insert id="insertRedeemAfterFollow" parameterType="RDTAfterFollowModel" >
        insert into
        T_SURETY_RDT_AFTER_FOLLOW(FID,FGUARANTEE_ID,FTAKE_CERT_DATE ,FCERT_NUMBER ,FTAKE_CERT_REMARK,
        FCERT_LOGOUT_DATE,FCERT_LOGOUT_NUMBER,FCERT_LOGOUT_REMARK,
        FTRANSFER_DATE,FTRANSFER_NUMBER,FTRANSFER_REMARK,FTAKE_NEWCERT_DATE,
        FNEW_CERT_NUMBER,FTAKE_NEWCERT_REMARK ,FMORTGAGE_DATE,
        FMORTGAGE_REMARK,FIS_UNPROTECTED,FUNPROTECTED_REMARK,
        FCREATE_TIME,FCREATE_OPERATOR_ID,FUPDATE_TIME,
        FUPDATE_OPERATOR_ID,FUNPROTECTED_DATE,FTAKE_CERT_ID,
        FCERT_LOGOUT_ID,FTRANSFER_ID,FTAKE_NEW_CERT_ID,FMORTGAGE_ID,FUNPROTECTED_ID)
        values (
        #{id},#{guaranteeId},#{takeCertDate},#{takeCertNumber},#{takeCertRemark},
        #{certLogoutDate},#{certLogoutNumber},#{certLogoutRemark},#{transferDate},
        #{transferNumber},#{transferRemark},#{takeNewCertDate},#{newCertNumber},#{takeNewCertRemark},
        #{mortgageDate},#{mortgageRemark},#{isUnprotected},#{unProtectedRemark},
        #{createTime},#{createOperatorId},#{updateTime},#{updateOperatorId},
        #{unProtectedDate},#{takeCertId},#{certLogoutId},#{transferId},#{takeNewCertId},
        #{mortgageId},#{unprotectedId}
        )
    </insert>

    <update id="updateRedeemAfter" parameterType="RDTAfterFollowModel">
        update T_SURETY_RDT_AFTER_FOLLOW
        <set>
            <if test=" takeCertDate !=null">
                FTAKE_CERT_DATE=#{takeCertDate},
            </if>
            <if test=" takeCertNumber !=null and takeCertNumber !='' " >
                FCERT_NUMBER=#{takeCertNumber},
            </if>
            <if test=" takeCertRemark !=null and takeCertRemark !='' " >
                FTAKE_CERT_REMARK=#{takeCertRemark},
            </if>
            <if test=" certLogoutDate !=null  " >
                FCERT_LOGOUT_DATE=#{certLogoutDate},
            </if>
            <if test=" certLogoutNumber !=null and certLogoutNumber !='' " >
                FCERT_LOGOUT_NUMBER=#{certLogoutNumber},
            </if>
            <if test=" certLogoutRemark !=null and certLogoutRemark !='' " >
                FCERT_LOGOUT_REMARK=#{certLogoutRemark},
            </if>
            <if test=" transferDate !=null">
                FTRANSFER_DATE=#{transferDate},
            </if>
            <if test=" transferNumber !=null and transferNumber !='' " >
                FTRANSFER_NUMBER=#{transferNumber},
            </if>
            <if test=" transferRemark !=null and transferRemark !='' " >
                FTRANSFER_REMARK=#{transferRemark},
            </if>
            <if test=" takeNewCertDate !=null">
                FTAKE_NEWCERT_DATE=#{transferDate},
            </if>
            <if test=" newCertNumber !=null and newCertNumber !='' " >
                FNEW_CERT_NUMBER=#{newCertNumber},
            </if>
            <if test=" takeNewCertRemark !=null and takeNewCertRemark !='' " >
                FTAKE_NEWCERT_REMARK=#{takeNewCertRemark},
            </if>
            <if test=" mortgageDate !=null">
                FMORTGAGE_DATE=#{mortgageDate},
            </if>
            <if test=" mortgageRemark !=null and mortgageRemark !='' " >
                FMORTGAGE_REMARK=#{mortgageRemark},
            </if>
            <if test=" mortgageDate !=null">
                FIS_UNPROTECTED=#{isUnprotected},
            </if>
            <if test=" unProtectedRemark !=null and unProtectedRemark !='' " >
                FUNPROTECTED_REMARK=#{unProtectedRemark},
            </if>
            <if test=" updateTime !=null">
                FUPDATE_TIME=#{updateTime},
            </if>
            <if test=" updateOperatorId !=null and updateOperatorId !='' " >
                FUPDATE_OPERATOR_ID=#{updateOperatorId},
            </if>
            <if test=" unProtectedDate !=null">
                FUNPROTECTED_DATE=#{unProtectedDate},
            </if>
            <if test=" takeCertId !=null and takeCertId !='' " >
                FTAKE_CERT_ID=#{takeCertId},
            </if>
            <if test=" certLogoutId !=null and certLogoutId !='' " >
                FCERT_LOGOUT_ID=#{certLogoutId},
            </if>
            <if test=" takeNewCertId !=null and takeNewCertId !='' " >
                FTAKE_NEW_CERT_ID=#{takeNewCertId},
            </if>
            <if test=" transferId !=null and transferId !='' " >
                FTRANSFER_ID=#{transferId},
            </if>
            <if test=" mortgageId !=null and mortgageId !='' " >
                FMORTGAGE_ID=#{mortgageId},
            </if>
            <if test=" unprotectedId !=null and unprotectedId !='' " >
                FUNPROTECTED_ID=#{unprotectedId},
            </if>
        </set>
        where FID=#{id}

    </update>

    <select id="queryNoBilling" parameterType="yhao.micro.service.surety.business.apilist.form.redemption.RedemptionQueryResultForm" resultMap="queryRedeemMap">
        SELECT GUARANTEE.FID,
        GUARANTEE.FGUARANTEE_NUM,
        GUARANTEE.FGUARANTEE_TYPE,
        BUSINESS_TYPE.FBUSINESS_NAME,
        ESTATE_SELLER.FESTATE_NAME,
        PERSONINFO_TRADES.FID as TRADES_ID,
        PERSONINFO_TRADES.FCLT_TYP,
        PERSONINFO_TRADES.FCLT_NAME,
        concat(concat(ref_org.FNAME,'-'),ERP_PERSON.FNAME) as MANAGER_NAME,
        FUND_PROVIDER.FNAME as redeemBankName,
        GUARANTEE_SITUATION.FGUARANTEE_AMOUNT,
        LOAN_GENERAL.FLOAN_TOTAL_AMOUNT,
        TB.bankName,
        ARRIVAL_GENERAL.FCONFIRM_ARRIVAL_DATE
        FROM  T_SURETY_GUARANTEE GUARANTEE
        LEFT JOIN SURETY.T_SURETY_BUSINESS_TYPE BUSINESS_TYPE ON BUSINESS_TYPE.FID = GUARANTEE.FBIZ_ID
        LEFT JOIN SURETY.T_ERP_PERSON ERP_PERSON ON    ERP_PERSON.FID = GUARANTEE.FCREATE_OPERATOR_ID
        LEFT JOIN SURETY.T_SURETY_G_GUARANTEE_SITUATION GUARANTEE_SITUATION ON GUARANTEE_SITUATION.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_BASE_FUND_PROVIDER  FUND_PROVIDER  ON  FUND_PROVIDER.FID = GUARANTEE_SITUATION.FREDEEM_BANK_ID
        LEFT JOIN SURETY.T_SURETY_G_ESTATE_SELLER ESTATE_SELLER ON ESTATE_SELLER.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_PERSONINFO_TRADES PERSONINFO_TRADES ON PERSONINFO_TRADES.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_LOAN_GENERAL LOAN_GENERAL ON LOAN_GENERAL.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_LOAN_SELLER LOAN_SELLER ON LOAN_SELLER.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN (
          SELECT FUND_PROVIDER.FNAME as bankName, LOAN_SELLER.FGUARANTEE_ID as FGUARANTEE_ID from SURETY.T_BASE_FUND_PROVIDER  FUND_PROVIDER
          LEFT JOIN SURETY.T_BASE_FUND_ACCOUNT FUND_ACCOUNT ON  FUND_PROVIDER.FID = FUND_ACCOUNT.FFUND_PROVIDER_ID
          LEFT JOIN SURETY.T_SURETY_G_LOAN_SELLER LOAN_SELLER ON FUND_ACCOUNT.FID = LOAN_SELLER.FLOAN_MB_ID
       )TB on TB.FGUARANTEE_ID = GUARANTEE.FID
       LEFT JOIN T_SURETY_FN_ARRIVAL_GENERAL ARRIVAL_GENERAL on ARRIVAL_GENERAL.FGUARANTEE_ID = GUARANTEE.FID
        <include refid="yhao.infra.service.base.DataAuthRef.tableSql"/>
        <where>
            ARRIVAL_GENERAL.FIS_CONFIRM ='YES'
            <if test="orgId != null and orgId != ''">
                and GUARANTEE.FORG_ID = #{orgId}
            </if>
            <if test="personId != null and personId != ''">
                and GUARANTEE.FCREATE_OPERATOR_ID = #{personId}
            </if>

            <if test="keyWord != null and keyWord != ''">
                and (GUARANTEE.FGUARANTEE_NUM = #{keyWord}
                or ESTATE_SELLER.FPROPERTY_NAME = #{keyWord}
                or PERSONINFO_TRADES.FCLT_NAME = #{keyWord}
                or (ESTATE_SELLER.FDEED_NUM = #{keyWord} and ESTATE_SELLER.FDEED_TYPE = 'FCZ'))
            </if>
        </where>
        <include refid="yhao.infra.service.base.DataAuthRef.conditionSql"/>
    </select>

    <resultMap id="queryRedeemMap" type="yhao.micro.service.surety.business.apilist.form.redemption.RedemptionQueryResultForm">
        <id property="id" column="FID" />
        <result property="guaranteeType" column="FGUARANTEE_TYPE"/>
        <result property="guaranteeNum" column="FGUARANTEE_NUM"/>
        <result property="businessName" column="FBUSINESS_NAME"/>
        <result property="guaranteeAmount" column="FGUARANTEE_AMOUNT"/>
        <result property="loanTotalAmount" column="FLOAN_TOTAL_AMOUNT"/>
        <result property="redeemBankName" column="redeemBankName"/>
        <result property="bankName" column="bankName"/>
        <result property="arrivalDate" column="FCONFIRM_ARRIVAL_DATE"/>
        <result property="billingDate" column="FCONFIRM_BILLING_DATE"/>
        <result property="redeemDate" column="FREDEEM_DATE"/>
        <result property="redemptionBalance" column="FREDEEM_BALANCE"/>
        <collection property = "applicationPersonModelList" ofType="yhao.micro.service.surety.business.apilist.model.guarantee.page.ApplicationPersonModel" >
            <id property="id" column="TRADES_ID" />
            <result property="cltTyp" column="FCLT_TYP"/>
            <result property="cltName" column="FCLT_NAME"/>
        </collection>
    </resultMap>

    <select id="queryNoRedeem" resultMap="queryRedeemMap" parameterType="yhao.micro.service.surety.business.apilist.form.redemption.RedemptionQueryResultForm">
        SELECT GUARANTEE.FID,
        GUARANTEE.FGUARANTEE_NUM,
        GUARANTEE.FGUARANTEE_TYPE,
        BUSINESS_TYPE.FBUSINESS_NAME,
        ESTATE_SELLER.FESTATE_NAME,
        PERSONINFO_TRADES.FID as TRADES_ID,
        PERSONINFO_TRADES.FCLT_TYP,
        PERSONINFO_TRADES.FCLT_NAME,
        concat(concat(ref_org.FNAME,'-'),ERP_PERSON.FNAME) as MANAGER_NAME,
        FUND_PROVIDER.FNAME as redeemBankName,
        GUARANTEE_SITUATION.FGUARANTEE_AMOUNT,
        LOAN_GENERAL.FLOAN_TOTAL_AMOUNT,
        TB.bankName,
        BILLING_GENERAL.FCONFIRM_BILLING_DATE
        FROM  T_SURETY_GUARANTEE GUARANTEE
        LEFT JOIN SURETY.T_SURETY_BUSINESS_TYPE BUSINESS_TYPE ON BUSINESS_TYPE.FID = GUARANTEE.FBIZ_ID
        LEFT JOIN SURETY.T_ERP_PERSON ERP_PERSON ON    ERP_PERSON.FID = GUARANTEE.FCREATE_OPERATOR_ID
        LEFT JOIN SURETY.T_SURETY_G_GUARANTEE_SITUATION GUARANTEE_SITUATION ON GUARANTEE_SITUATION.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_BASE_FUND_PROVIDER  FUND_PROVIDER  ON  FUND_PROVIDER.FID = GUARANTEE_SITUATION.FREDEEM_BANK_ID
        LEFT JOIN SURETY.T_SURETY_G_ESTATE_SELLER ESTATE_SELLER ON ESTATE_SELLER.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_PERSONINFO_TRADES PERSONINFO_TRADES ON PERSONINFO_TRADES.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_LOAN_GENERAL LOAN_GENERAL ON LOAN_GENERAL.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_LOAN_SELLER LOAN_SELLER ON LOAN_SELLER.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN (
        SELECT FUND_PROVIDER.FNAME as bankName, LOAN_SELLER.FGUARANTEE_ID as FGUARANTEE_ID from SURETY.T_BASE_FUND_PROVIDER  FUND_PROVIDER
        LEFT JOIN SURETY.T_BASE_FUND_ACCOUNT FUND_ACCOUNT ON  FUND_PROVIDER.FID = FUND_ACCOUNT.FFUND_PROVIDER_ID
        LEFT JOIN SURETY.T_SURETY_G_LOAN_SELLER LOAN_SELLER ON FUND_ACCOUNT.FID = LOAN_SELLER.FLOAN_MB_ID
        )TB on TB.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN T_SURETY_FN_BILLING_GENERAL BILLING_GENERAL on BILLING_GENERAL.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN T_SURETY_BILLING_APPLY BILLING_APPLY on BILLING_APPLY.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN T_WK_TASK WK_TASK on WK_TASK.FID = BILLING_APPLY.FTASK_ID
        <include refid="yhao.infra.service.base.DataAuthRef.tableSql"/>
        <where>
            BILLING_GENERAL.FIS_CONFIRM ='YES'
            AND WK_TASK.FSTATUS ='END'
            <if test="orgId != null and orgId != ''">
                and GUARANTEE.FORG_ID = #{orgId}
            </if>
            <if test="personId != null and personId != ''">
                and GUARANTEE.FCREATE_OPERATOR_ID = #{personId}
            </if>

            <if test="keyWord != null and keyWord != ''">
                and (GUARANTEE.FGUARANTEE_NUM = #{keyWord}
                or ESTATE_SELLER.FPROPERTY_NAME = #{keyWord}
                or PERSONINFO_TRADES.FCLT_NAME = #{keyWord}
                or (ESTATE_SELLER.FDEED_NUM = #{keyWord} and ESTATE_SELLER.FDEED_TYPE = 'FCZ'))
            </if>
        </where>
        <include refid="yhao.infra.service.base.DataAuthRef.conditionSql"/>
    </select>



    <select id="queryRedeem" parameterType="yhao.micro.service.surety.business.apilist.form.redemption.RedemptionQueryResultForm"
            resultMap="queryRedeemMap">
        SELECT GUARANTEE.FID,
        GUARANTEE.FGUARANTEE_NUM,
        GUARANTEE.FGUARANTEE_TYPE,
        BUSINESS_TYPE.FBUSINESS_NAME,
        ESTATE_SELLER.FESTATE_NAME,
        PERSONINFO_TRADES.FID as TRADES_ID,
        PERSONINFO_TRADES.FCLT_TYP,
        PERSONINFO_TRADES.FCLT_NAME,
        concat(concat(ref_org.FNAME,'-'),ERP_PERSON.FNAME) as MANAGER_NAME,
        FUND_PROVIDER.FNAME as redeemBankName,
        GUARANTEE_SITUATION.FGUARANTEE_AMOUNT,
        LOAN_GENERAL.FLOAN_TOTAL_AMOUNT,
        TB.bankName,
        BILLING_GENERAL.FCONFIRM_BILLING_DATE,
        TR.FREDEEM_BALANCE
        FROM  T_SURETY_GUARANTEE GUARANTEE
        LEFT JOIN SURETY.T_SURETY_BUSINESS_TYPE BUSINESS_TYPE ON BUSINESS_TYPE.FID = GUARANTEE.FBIZ_ID
        LEFT JOIN SURETY.T_ERP_PERSON ERP_PERSON ON    ERP_PERSON.FID = GUARANTEE.FCREATE_OPERATOR_ID
        LEFT JOIN SURETY.T_SURETY_G_GUARANTEE_SITUATION GUARANTEE_SITUATION ON GUARANTEE_SITUATION.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_BASE_FUND_PROVIDER  FUND_PROVIDER  ON  FUND_PROVIDER.FID = GUARANTEE_SITUATION.FREDEEM_BANK_ID
        LEFT JOIN SURETY.T_SURETY_G_ESTATE_SELLER ESTATE_SELLER ON ESTATE_SELLER.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_PERSONINFO_TRADES PERSONINFO_TRADES ON PERSONINFO_TRADES.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_LOAN_GENERAL LOAN_GENERAL ON LOAN_GENERAL.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN SURETY.T_SURETY_G_LOAN_SELLER LOAN_SELLER ON LOAN_SELLER.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN (
            SELECT FUND_PROVIDER.FNAME as bankName, LOAN_SELLER.FGUARANTEE_ID as FGUARANTEE_ID from SURETY.T_BASE_FUND_PROVIDER  FUND_PROVIDER
            LEFT JOIN SURETY.T_BASE_FUND_ACCOUNT FUND_ACCOUNT ON  FUND_PROVIDER.FID = FUND_ACCOUNT.FFUND_PROVIDER_ID
            LEFT JOIN SURETY.T_SURETY_G_LOAN_SELLER LOAN_SELLER ON FUND_ACCOUNT.FID = LOAN_SELLER.FLOAN_MB_ID
        )TB on TB.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN T_SURETY_FN_BILLING_GENERAL BILLING_GENERAL on BILLING_GENERAL.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN T_SURETY_BILLING_APPLY BILLING_APPLY on BILLING_APPLY.FGUARANTEE_ID = GUARANTEE.FID
        LEFT JOIN T_WK_TASK WK_TASK on WK_TASK.FID = BILLING_APPLY.FTASK_ID
        LEFT JOIN (
             SELECT SUM(REDEEM_R.FREDEEM_BALANCE) AS FREDEEM_BALANCE,REDEEM_R.FGUARANTEE_PID AS FGUARANTEE_ID
             FROM T_SURETY_REDEEM REDEEM_R
             LEFT JOIN SURETY.T_SURETY_GUARANTEE GUARANTEE_R ON    GUARANTEE_R.FID = REDEEM_R.FGUARANTEE_PID
             GROUP BY REDEEM_R.FGUARANTEE_PID
        )TR ON TR.FGUARANTEE_ID = GUARANTEE.FID
        <include refid="yhao.infra.service.base.DataAuthRef.tableSql"/>
        <where>
            BILLING_GENERAL.FIS_CONFIRM ='YES'
            AND WK_TASK.FSTATUS ='END'
            <if test="orgId != null and orgId != ''">
                and GUARANTEE.FORG_ID = #{orgId}
            </if>
            <if test="personId != null and personId != ''">
                and GUARANTEE.FCREATE_OPERATOR_ID = #{personId}
            </if>

            <if test="keyWord != null and keyWord != ''">
                and (GUARANTEE.FGUARANTEE_NUM = #{keyWord}
                or ESTATE_SELLER.FPROPERTY_NAME = #{keyWord}
                or PERSONINFO_TRADES.FCLT_NAME = #{keyWord}
                or (ESTATE_SELLER.FDEED_NUM = #{keyWord} and ESTATE_SELLER.FDEED_TYPE = 'FCZ'))
            </if>
        </where>
        <include refid="yhao.infra.service.base.DataAuthRef.conditionSql"/>
    </select>


    <select id="queryApplyRecord" parameterType="yhao.infra.apilist.validate.IdForm" resultMap="billingApplyMap">
        select FGUARANTEE_ID.FID,BILLING_APPLY.FGUARANTEE_ID,BILLING_APPLY.FLOAN_ID,BILLING_APPLY.FRECEIPT_PERSON_TYPE,BILLING_APPLY.FRECEIPT_ACCOUNT_ID,
        BILLING_APPLY.FRECEIPT_ACCOUNT_NUM,BILLING_APPLY.FRECEIPT_ACCOUNT_BANK,
        BILLING_APPLY.FREDEEM_DATE,BILLING_APPLY.FAPPLY_AMOUNT,BILLING_APPLY.FTASK_ID,
        BILLING_APPLY.FTASK_PROSESS,BILLING_APPLY.FREMARK,BILLING_APPLY.FCREATE_TIME,
        BILLING_APPLY.FCREATE_OPERATOR_ID,BILLING_APPLY.FUPDATE_TIME,BILLING_APPLY.FUPDATE_OPERATOR_ID,WK_TASK.FSTATUS AS FTASK_STATUS
        FROM T_SURETY_BILLING_APPLY BILLING_APPLY
        INNER JOIN T_WK_TASK WK_TASK ON WK_TASK.FID = BILLING_APPLY.FTASK_ID
        where BILLING_APPLY.FGUARANTEE_ID =#{id}
    </select>

    <insert id="inertInsertRedeem" parameterType="RedeemModel">
        INNER INTO T_SURETY_REDEEM(
        FID,FGUARANTEE_PID,FFINANCE_BILLING_ID,FBILLING_AMOUNT,FPERSON_REPLENISHMENT,FREAL_REPAY_AMOUNT,
        FINTEREST,FPENALTY_INTEREST,FREDEEM_TOTAL_AMOUNT,FREDEEM_BALANCE,FREDEEM_OPERATOR_ID,FCOMPANY_ACCOUNT_ID,
        FREDEEM_DATE,FREMARK,FCREATE_TIME,FCREATE_OPERATOR_ID,FUPDATE_TIME,FUPDATE_OPERATOR_ID)
        VALUES (#{id},#{guaranteePid},#{financeBillingId},#{billingAmount},#{personReplenishment},
        #{realRepayAmount},#{interest},#{penaltyInterest},#{redeemTotalAmount},#{redeemBalance},
        #{redeemOperatorId},#{companyAccountId},#{redeemDate},#{remark},
        #{createTime},#{createOperatorId},#{updateTime},#{updateOperatorId})
    </insert>

    <select id="queryRedeemRecord" resultMap="redeemMap" parameterType="yhao.infra.apilist.validate.IdForm">
      SELECT REDEEM.FID,BILLING_DETAIL.FGUARANTEE_ID AS FGUARANTEE_PID ,BILLING_DETAIL.FID AS FFINANCE_BILLING_ID,
      BILLING_DETAIL.FBILLING_AMOUNT,REDEEM.FPERSON_REPLENISHMENT,
      REDEEM.FREAL_REPAY_AMOUNT,REDEEM.FINTEREST,REDEEM.FPENALTY_INTEREST,REDEEM.FREDEEM_TOTAL_AMOUNT,REDEEM.FREDEEM_BALANCE,
      REDEEM.FREDEEM_OPERATOR_ID,REDEEM.FCOMPANY_ACCOUNT_ID,REDEEM.FREDEEM_DATE,REDEEM.FREMARK,
      REDEEM.FCREATE_TIME,REDEEM.FCREATE_OPERATOR_ID,REDEEM.FUPDATE_TIME,REDEEM.FUPDATE_OPERATOR_ID
      FROM  T_SURETY_FN_BILLING_DETAIL BILLING_DETAIL
      LEFT JOIN T_SURETY_FN_BILLING_GENERAL BILLING_GENERAL on BILLING_GENERAL.FGUARANTEE_ID = BILLING_DETAIL.FGUARANTEE_ID
      LEFT JOIN T_SURETY_REDEEM REDEEM on BILLING_DETAIL.FGUARANTEE_ID = REDEEM.FGUARANTEE_PID
      WHERE  BILLING_GENERAL.FIS_CONFIRM ='YES'
      AND BILLING_DETAIL.FGUARANTEE_ID =#{id}
    </select>












</mapper>